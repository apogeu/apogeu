#!/usr/bin/env node

const yargs = require('yargs');
const log = require('winston');

const defaultOptions = {
  debug: {
    alias: 'd',
    describe: 'Execute command in debug mode',
    default: false,
  },
};

const types = ['all', 'middleware', 'controller', 'service', 'model'];

const argv = yargs
  .help('h')
  .alias('help', 'h')
  .version()
  .alias('version', 'v')
  .command('start', 'Start project', defaultOptions)
  .command('new [project_name]', 'New project', Object.assign(defaultOptions, {
    api: {
      describe: 'New project with only API structure',
      default: false,
    },
  }))
  .command(`create <type> [${types.join('|')}] <model_name>`, 'Create model structure', defaultOptions)
  .demandCommand(1, 'You need at least one command before moving on')
  .wrap(null)
  .argv;

if (argv.debug) process.env.DEBUG = 'apogeu:*';
const debug = require('debug')('apogeu:apogeu');

debug('init apogeu');

require('../src/bluebird');

const command = argv._[0];

switch (command) {
  case 'start':
    require('./www');
    break;
  case 'new':
    require('./new')(argv.project_name, argv.api);
    break;
  case 'create':
    if (!types.includes(argv.type)) {
      yargs.showHelp();
      log.error(`Type needs to be ${types.join('|')}`);
      process.exit(1);
    }
    require('./create')(argv.type, argv.model_name);
    break;
  default:
    yargs.showHelp();
    process.exit(1);
    break;
}
