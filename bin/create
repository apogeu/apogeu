#!/usr/bin/env node

const debug = require('debug')('apogeu:create');
const path = require('path');
const capitalize = require('capitalize');
const pluralize = require('pluralize');
const log = require('winston');

const paths = require('../src/paths');
const renderTemplate = require('../src/renderTemplate');
const saveTemplate = require('../src/saveTemplate');

const getFilename = fileName => `${fileName.toLowerCase()}.js`;

module.exports = (modelName) => {
  const validator = new RegExp('^[A-Za-z][a-zA-Z0-9]+$');
  modelName = capitalize(modelName.split(' ')[0]);
  if (!validator.test(modelName)) {
    debug('Model name should be composed only by letters and numbers. First char must be a letter.');
  }

  debug(`creating structure for ${modelName} model`);

  const modelNamePlural = pluralize.plural(modelName);

  const model = renderTemplate('model', modelName);
  const controller = renderTemplate('controller', modelNamePlural);
  const service = renderTemplate('service', modelName);

  Promise.all([
    saveTemplate(model, path.join(paths.models, getFilename(modelName))),
    saveTemplate(controller, path.join(paths.controllers, getFilename(modelNamePlural))),
    saveTemplate(service, path.join(paths.services, getFilename(modelNamePlural))),
  ])
    .then(() => debug(`${modelName} structure created`))
    .catch((err) => {
      log.error(err.stack);
      process.exit(1);
    });
};
