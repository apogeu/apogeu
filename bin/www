#!/usr/bin/env node

const debug = require('debug')('apogeu:www');
const express = require('express');
const log = require('winston');
const logger = require('morgan');
const bodyParser = require('body-parser');
const cookieParser = require('cookie-parser');
const helmet = require('helmet');
const i18n = require('i18n');

const app = express();

const paths = require('../src/paths');
const envs = require('../src/envs');
const database = require('../src/database');
const models = require('../src/models');
const services = require('../src/services');
const controllers = require('../src/controllers');
const routes = require('../src/routes');
const errorHandler = require('../src/errorHandler');

i18n.configure({ directory: paths.i18n });

debug('init apogeu');

app.use(helmet());
app.use(logger(envs.logger));
app.use(bodyParser.json());
app.use(bodyParser.urlencoded({ extended: false }));
app.use(cookieParser());
app.use(i18n.init);

app.set('views', paths.views);
app.set('view engine', 'pug');

app.use('/public', express.static(paths.public.this));

database()
  .then(models)
  .then(services)
  .then(controllers)
  .then(routes)
  .then((router) => {
    require('../src/gulp');
    app.use(router);
    app.listen(envs.port, () => {
      log.info(`Apogeu listening on port ${envs.port}`);
    });
    errorHandler(app);
  })
  .catch((err) => {
    log.error(err.stack);
    process.exit(1);
  });
